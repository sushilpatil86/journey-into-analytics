## Intro to R ##
setwd("F:\\personal\\BA\\R\\WD")
#Agenda:Variables,vector,selection of element of vectors,entering data into dataframe

#USe # for writing a comment
p<-5
q<-p+5

#Can do arithmetic operations
pi
sqrt(25)
2^2+5

p<-5

# Items in R are stored as objects
#Setting variables
#Assignment of values to a variable "<-"

x<-5

x< -5 #comparison

# other forms of assignment operator
fun=6
fun<-6

fun
8->foo

foo<-8
#Over writing a variable

x<- "Sushil"

#List of all the variables & functions in your workspace
##gives vector of character strings 
ls()
ls.str() #Gives more information

class(foo)
#deleting the variables
rm(x)

rm(foo,fun)
ls()
ls.str()

# How to create a vector?
# It consists of either numbers,strings, or logical values but not all of them together.
# It contains only 1 type of class
# Type of variables : Class of the variables (Integer,character,logical)

# c is the combining operator
 x<-5 #it is a numeric vector of 1 element
 x<-c(1,2,-5,6) # numeric vector of 4 elements
 x 

 a<-3
 a1<-c(a,a*4,-7*a)
 a1

 string<-c("1","2","2","3","4")
 ls.str()
 #class gives the data type of vector
class(string)
p<-c(TRUE,FALSE,TRUE) #class is 
class(p)

a1<-c(1,1,1)
a2<-c(2,2,2)
c(a1,a2)

#Vectors shouldn't have mixed type of data
p<-c(1,2,"g")
class(p)
p<-c(TRUE,FALSE,"G")
class(p)
p<-c(TRUE,FALSE,1)
class(p)
class(c(TRUE,FALSE,1))


x<-c(1,2,3,4)
class(x)
x1<-c(1.2,2.4,3.5,4.5)
class(x1)

#Data Structures in R
#Vector,matrices,dataframes,Lists

# Vector : Most Simplest structure in R .Only one data type

num<-c("a","b","c","d","e")
num
num[1]
num[4]
num[-1]
num[c(1,2)]
#assigning names
names(num)<-c("x1","x2","x3","x4","x5")
names(num)[4]
num["x4"]
num[c("x1","x2")]


length(num)

#Lists : Recursive vectors. Can handle different data types

x<-c(1,2,3,4)
y<-list(1,2,3,4)
y

my.list <- list( name = c("Robert", "Emma"), age = c (65, 54,43),
                 retired = c (TRUE, FALSE))
my.list

my.list$age
my.list["age"]

class(my.list$age)
class(my.list["age"])

my.list[["age"]][2]

my.list[[3]]
my.list [[3]][2]

list(c("Robert", "Emma"), age = c (65, 54),
      retired = c (TRUE, FALSE))

#Matrices : Contains only one type of data . It contains more than 
#one dimension.
B = matrix( c(2, 4, 3, 1, 5, 7), 
            nrow=3, 
            ncol=2)
B
B[1] # B[1,1]
B[,2]
B[1,2]

#DataFrame : A single table with rows and columns of data .
#Each column can be a different Data types. 
#Consider the following vectors : 

product=c("Bag","shoes","belt","belt")

total_price=c(500,1000,150,200)

color=c("Blue","red","red","blue")

quantity=c(5,2,3,4)

product_details <- data.frame(product,total_price,color,quantity)
class(product_details)
product_details <- data.frame(product,total_price,color,quantity, 
                               stringsAsFactors=FALSE)
product_details

str(product_details)
product_details<-data.frame(product=c("Bag","shoes","belt","belt"),
                            total_price=c(500,1000,150,200),
                            color=c("Blue","red","red","blue"),
                            quantity=c(5,2,3,4),stringsAsFactors=FALSE)

p<-c("A","B","B","B")
product_details
class(product_details)

product_details[,2]
product_details[,"total_price"]

product_details[2,]
product_details[2,2]
product_details$product<-as.factor(product_details$product)

head(product_details,2)
tail(product_details,2)

#setting working directory
setwd("F:\\personal\\BA\\R\\WD")

#Writing a csv file
write.csv(product_details,"product_details.csv",row.names=FALSE)

#Writing a csv file
write.csv(product_details,"product_details1.csv")

#reading a csv file
p<-read.csv("product_details.csv")
read.csv()
head(p)
dim(p)
names(p)

#Setting the working directory
getwd()
#setwd("E:\\Introduction to R")

#Saving the workspace
save.image()#saves the work space
save.image(file="Intro_to_R_objects.RData")

load(file="Intro_to_R_objects.RData")

#List of packages currently loaded in R
#What are R packages?
#Packages are collections of R functions, data, and compiled code in a well-defined format
#It is useful for performing certain functions in R

library() # List of installed packages
search()    # see packages currently loaded

# Download the package . Then load it into R

# For Example


install.packages('randomForest') #install the package
library(randomForest) # load the package into the workspace
?randomForest # check package documentation

vec<-c(1,2,2,2,2,3,4,5)
install.packages("MASS")
library(MASS)

hist.FD(vec)

detach(package:MASS)#To remove a package from workspace
hist(vec)

# To know about Default datasets in base package in R :
data()

data(airquality)
#to get help regarding any command or dataset in R-
?airquality
?head

#first steps with a dataset

#read the dataset 
setwd("F:\\personal\\BA\\R\\data set")
chicago<-read.csv("chicago.csv")
#StringsAsFactor : To keep the character values as "character" and not convert them to factors
chicago<-read.csv("chicago.csv", stringsAsFactors = TRUE)

# How to take a look at the dataset?
head(chicago)
tail(chicago)
dim(chicago)

str(chicago)

#useful for numeric data
#study the distribution of the dataset
summary(chicago) 


#For character data : Get the frequency distribution
table(chicago$death)
table(chicago$season)

rm(list=ls())#Remove all objects in the workspace
## loops in R ##
for ( i in 1:100)
{
  print(i)
}
## Basic functions in R ##
sum<-function(x,y)
{
  print(x+y)
}

## Credit Jigsaw academy
